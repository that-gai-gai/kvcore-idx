// .kv-modal-open      - body class for killing the scroll
// .kv-modal           - container to scroll within
// .kv-modal-dialog    - positioning shell for the actual modal
// .kv-modal-content   - actual modal w/ bg and corners and stuff

// Container that the modal scrolls within
.kv-modal {
	$m: &;

	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: $zindex-modal;
	display: none;
	overflow: hidden;
	// Prevent Chrome on Windows from adding a focus outline. For details, see
	// https://github.com/twbs/bootstrap/pull/10951.
	outline: 0;
	// We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
	// gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
	// See also https://github.com/twbs/bootstrap/issues/17695

	// Kill the scroll on the body
	&-open {
		overflow: hidden;
		padding-right: 17px !important;
	}

	&-open & {
		overflow-x: hidden;
		overflow-y: auto;
	}

	// Shell div to position the modal with bottom padding
	&-dialog {
		position: relative;
		width: auto;
		margin: $modal-dialog-margin;
		// allow clicks to pass through for custom click handling to close modal
		pointer-events: none;

		&-centered {
			display: flex;
			align-items: center;
			min-height: calc(100% - (#{$modal-dialog-margin} * 2));
		}

		// When fading in the modal, animate it to slide down
		#{$m}.fade & {
			@include transition($modal-transition);
			transform: translate(0, -25%);
		}
		#{$m}.show & {
			transform: translate(0, 0);
		}
	}

	// Actual modal
	&-content {
		position: relative;
		display: flex;
		flex-direction: column;
		width: 100%; // Ensure `.kv-modal-content` extends the full width of the parent `.kv-modal-dialog`
		// counteract the pointer-events: none; in the .kv-modal-dialog
		padding-left: 0;
		padding-right: 0;
		pointer-events: auto;
		background-color: $modal-content-bg;
		background-clip: padding-box;
		border: $modal-content-border-width solid $modal-content-border-color;
		@include border-radius($modal-content-border-radius);
		@include box-shadow($modal-content-box-shadow-xs);
		// Remove focus outline from opened modal
		outline: 0;
	}


	// Modal header
	// Top section of the modal w/ title and dismiss
	&-header {
		display: flex;
		align-items: flex-start; // so the close btn always stays on the upper right corner
		justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
		padding: $modal-header-padding;
		border-bottom: $modal-header-border-width solid $modal-header-border-color;
		@include border-top-radius($modal-content-border-radius);

		#{$m}-close {
			// auto on the left force icon to the right even when there is no .kv-modal-title
			margin: 0 0 (-$modal-header-padding) auto;
			padding: 0 5px;
			border: none;
			background: transparent;
			font-size: 1.5rem;
			color: #333;
			cursor: pointer;
			opacity: 0.5;
			transition: opacity 300ms ease;

			&:hover {
				opacity: 1;
			}
		}
	}

	// Title text within header
	&-title {
		margin-bottom: 0;
		line-height: $modal-title-line-height;
		font-size: 1.5rem;
	}

	// Modal body
	// Where all modal content resides (sibling of .kv-modal-header and .kv-modal-footer)
	&-body {
		position: relative;
		// Enable `flex-grow: 1` so that the body take up as much space as possible
		// when should there be a fixed height on `.kv-modal-dialog`.
		flex: 1 1 auto;
		padding: $modal-inner-padding;
	}

	// Footer (for actions)
	&-footer {
		display: flex;
		align-items: center; // vertically center
		justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
		padding: $modal-inner-padding;
		border-top: $modal-footer-border-width solid $modal-footer-border-color;

		// Easily place margin between footer elements
		> :not(:first-child) { margin-left: .25rem; }
		> :not(:last-child) { margin-right: .25rem; }
	}

	// Measure scrollbar width for padding body during modal show/hide
	&-measure {
		position: absolute;
		top: -9999px;
		width: 50px;
		height: 50px;
		overflow: scroll;
	}

	// Scale up the modal
	@include media-breakpoint-up(sm) {
		// Automatically set modal's width for larger viewports
		&-dialog {
			max-width: $modal-md;
			margin: $modal-dialog-margin-y-sm-up auto;

			&-wide {
				max-width: $modal-md * 1.5;
			}
		}

		&-dialog-centered {
			min-height: calc(100% - (#{$modal-dialog-margin-y-sm-up} * 2));
		}

		&-content {
			@include box-shadow($modal-content-box-shadow-sm-up);
		}

		&-sm { max-width: $modal-sm; }
	}

	@include media-breakpoint-up(lg) {
		&-lg { max-width: $modal-lg; }
	}
}

// Modal background
.kv-modal-backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: $zindex-modal-backdrop;
	background-color: $modal-backdrop-bg;

	// Fade for backdrop
	&.fade { opacity: 0 !important; }
	&.show { opacity: $modal-backdrop-opacity !important; }
}